apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-db
spec:
  strategy:
    type: Recreate
  selector:
   matchLabels:
    app: auth-db
  replicas: 1
  template:
    metadata:
      labels:
        app: auth-db
    spec:
      containers:
        - name: postgres
          image: postgres:15
          imagePullPolicy: "IfNotPresent"
          env:
           - name: POSTGRES_USER
             valueFrom:
               secretKeyRef:
                 name: postgres-secret
                 key: postgres-root-username
           - name: POSTGRES_PASSWORD
             valueFrom:
               secretKeyRef:
                 name: postgres-secret
                 key: postgres-root-password
           - name: POSTGRES_DB
             valueFrom:
               configMapKeyRef:
                 name: postgres-configmap
                 key: postgres-dbname
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: auth-db-storage
            - mountPath: /docker-entrypoint-initdb.d
              name: postgresql-initdb
          readinessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            exec:
              command: ["pg_isready", "-U", "postgres"]
            initialDelaySeconds: 30
            periodSeconds: 10
          startupProbe:
            exec:
              command: ["pg_isready", "-U", "postgres"]
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: auth-db-storage
          persistentVolumeClaim:
            claimName: auth-db-pv-claim
        - name: postgresql-initdb
          configMap:
            name: auth-initdb-config
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: auth-db-pv
  labels:
    type: local
    app: auth-db
spec:
  storageClassName: manual
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: auth-db-pv-claim
  labels:
    app: auth-db
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: Service
metadata:
  name: auth-db
  labels:
    app: auth-db
spec:
   ports:
    - name: auth-db
      port: 5432
      nodePort: 30432
   type: NodePort
   selector:
    app: auth-db
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  labels:
    app: postgres
type: Opaque
data:
    postgres-root-username: cG9zdGdyZXM=
    postgres-root-password: cG9zdGdyZXM=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-configmap
  labels:
    app: postgres
data:
  postgres-dbname: 'petshop'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-initdb-config
  labels:
    app: postgres
data:
  init.sql: |-
    CREATE TABLE IF NOT EXISTS rksp_users
    (
        id          SERIAL PRIMARY KEY,
        username    VARCHAR(256),
        password    VARCHAR(256),
        user_role   VARCHAR(256),
        client_id   VARCHAR(256) NULL,
        client_name VARCHAR(256) NULL
    );